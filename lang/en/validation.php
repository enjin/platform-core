<?php

return [
    'account_exists_in_collection' => 'Could not find a collection account for :account at collection :collectionId.',
    'account_exists_in_token' => 'Could not find a token account for :account at collection :collectionId and token :tokenId.',
    'account_exists_in_wallet' => 'Could not find the :attribute specified.',
    'approval_exists_in_collection' => 'Could not find an approval for :operator at collection :collectionId.',
    'approval_exists_in_token' => 'Could not find an approval for :operator at collection :collectionId and token :tokenId.',
    'attribute_exists_in_collection' => 'The key does not exist in the specified collection.',
    'check_token_count' => 'The overall token count :total have exceeded the maximum cap of :maxToken tokens.',
    'daemon_prohibited' => 'The :attribute cannot be set to the daemon account.',
    'distinct_attribute' => 'The :attribute must be an array of distinct attributes keys.',
    'distinct_multi_asset' => 'The :attribute must be an array of distinct multi assets.',
    'is_collection_owner' => 'The :attribute provided is not owned by you.',
    'is_collection_owner_or_approved' => 'The :attribute provided is not owned by you and you are not currently approved to use it.',
    'is_managed_wallet' => 'The :attribute is not a wallet managed by this platform.',
    'key_doesnt_exit_in_token' => 'The key does not exist in the specified token.',
    'max_big_int' => 'The :attribute is too large, the maximum value it can be is :max.',
    'max_token_balance' => 'The :attribute is invalid, the amount provided is bigger than the token account balance.',
    'min_big_int' => 'The :attribute is too small, the minimum value it can be is :min.',
    'min_token_deposit' => 'The :attribute is too small, the min token deposit is 0.01 ENJ thus initialSupply * unitPrice must be greater than 10^16.',
    'mutation.behavior.isCurrency.accepted' => "The isCurrency parameter only accepts true. If you don't want it to be a currency, don't pass it.",
    'no_tokens_in_collection' => 'The :attribute must not have any existing tokens.',
    'token_doesnt_exist_in_collection' => 'The :attribute already exists in the specified collection.',
    'token_encode_doesnt_exist_in_collection' => 'The :attribute already exists in the specified collection.',
    'token_encode_exist_in_collection' => 'The :attribute does not exist in the specified collection.',
    'token_encode_exists' => "The :attribute doesn't exist.",
    'token_exists_in_collection' => 'The :attribute does not exist in the specified collection.',
    'valid_hex' => 'The :attribute has an invalid hex string.',
    'valid_royalty_percentage' => 'The :attribute valid for a royalty is in the range of 0.1% to 50% and a maximum of 7 decimal places.',
    'valid_substrate_account' => 'The :attribute is not a valid substrate account.',
    'valid_substrate_address' => 'The :attribute is not a valid substrate address.',
    'valid_substrate_transaction_id' => 'The :attribute has a not valid substrate transaction ID.',
    'valid_verification_id' => 'The verification ID is not valid.',
    'numeric' => 'The :attribute must be numeric.',
    'collection_has_tokens' => "The collection doesn't have any tokens.",
    'unused_verification_id' => 'The verification ID is already in use.',
    'account_waiting_collection_transfer' => 'There is no pending collection transfer for the account :account at collection :collectionId.',
    'string_too_large' => 'The :attribute field is too large.',
    'not_daemon_wallet' => 'The :attribute is a daemon wallet and should not be used as a signingAccount.',
    'keep_existential_deposit' => 'The :attribute is not enough to keep the existential deposit of :existentialDeposit.',
    'invalid_after' => 'The :attribute contains an invalid encoded data.',
    'valid_substrate_addresses' => 'The :attribute contains an invalid substrate address.',
    'accounts_not_in_fuel_tank' => 'The :attribute contains an account that already exists in the fuel tank.',
    'account_exists_in_fuel_tank' => 'The :attribute contains an account that doesn\'t exist in the fuel tank.',
    'is_fuel_tank_owner' => 'The :attribute provided is not owned by you.',
    'valid_mutation' => 'The :attribute provided is not a valid mutation.',
    'valid_mutation.encodedData' => 'The id and encodedData attribute must be queried from the result.',
    'rule_set_not_exist' => 'The rule set ID doesn\'t exist.',
    'rule_set_exist' => 'The rule set ID already exist.',
    'dispatch_rule_not_found' => 'The dispatch rule chosen was not found.',
    'dispatch_rule_requirements' => 'The dispatch rule requirements are not met.',
    'future_block' => 'The :attribute must be at least :block.',
    'enough_token_supply' => 'The token supply is not enough.',
    'listing_not_cancelled' => 'The listing is already cancelled.',
    'minimum_price' => 'The minimum bidding price must be greater than or equal to :price.',
];

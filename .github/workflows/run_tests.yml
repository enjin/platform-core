name: Unit & Functional Tests

on:
  workflow_run:
    workflows: [Automatic Linter]
    types:
      - completed

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_DATABASE: platform
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 33306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: --entrypoint redis-server
    strategy:
      fail-fast: true
      matrix:
        php: [8.3]

    name: PHP ${{ matrix.php }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd, gmp, intl, json, mysql, readline, sodium, bcmath, pcov
          tools: composer:v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup GO
        uses: actions/setup-go@v5
        with:
          go-version: "^1.21"

      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install dependencies
        run: |
          composer install --no-interaction --no-progress
          composer build-sr25519
          composer dump-autoload      

      - name: Execute tests
        run: |
          php -d pcov.enabled=1 ./vendor/bin/phpunit --colors=always --coverage-clover coverage.xml
        env:
          DB_HOST: 127.0.0.1
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
          DB_DATABASE: platform

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          dry_run: github.event.pull_request.draft == true
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
          verbose: true
